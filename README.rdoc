= Iban-check

[![Build Status](https://secure.travis-ci.org/LTe/iban-check.png)](http://travis-ci.org/LTe/iban-check) [![Dependency Status](https://gemnasium.com/LTe/iban-check.png)](https://gemnasium.com/LTe/iban-check)


Check your IBAN number.

= Usage

    iban = Iban::IbanCheck.new :iban => "PL27 1140 2004 0000 3002 0135 5387"
    iban.checksum => "27"
    iban.valid? => true

    iban = Iban::IbanCheck.new :iban => "27 1140 2004 0000 3002 0135 5387", :country => "PL"
    iban.checksum => "27"
    iban.valid? => true

    iban = Iban::IbanCheck.new :iban => "GB29 NWBK 6016 1331 9268 19"
    iban.checksum => "29"
    iban.valid? => true

    iban = Iban::IbanCheck.new :iban => "IE55 AIBK 9311 5212 3456 78" # should be "IE29 AIBK 9311 5212 3456 78"
    iban.checksum => "29"
    iban.valid? => false

= Command line support

The gem will install a `iban-check` command to allow IBAN validation from external programs.

`iban-check` returns a zero exit-code if the IBAN is valid and a non-zero exit-code otherwise.

Example:

    $ iban-check "GB29 NWBK 6016 1331 9268 19"
    Valid IBAN
    => exit code 0

    $ iban-check "XXX"
    Invalid country
    => exit code 1

== Note on Patches/Pull Requests

* Fork the project.
* Make your feature addition or bug fix.
* Add tests for it. This is important so I don't break it in a
  future version unintentionally.
* Commit, do not mess with rakefile, version, or history.
  (if you want to have your own version, that is fine but bump version in a commit by itself I can ignore when I pull)
* Send me a pull request. Bonus points for topic branches.

== Copyright

Copyright © 2010 Piotr Niełacny (http://ruby-blog.pl), released under the MIT license
